#
bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
#
transformed_var <- (fullDataSet$G3^lambda.opt - 1) / lambda.opt
#
model_boxcox <- lm(transformed_var ~ G1 + G2 + significantOther + age + absences, fullDataSet)
summary(model_boxcox)
autoplot(model_boxcox, which = 2)
shapiro.test(model_boxcox$residuals)
# #other attempts
invTranPlot(absences ~ G2, data = fullDataSet, lambda =  2, optimal = TRUE)
bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
# #other attempts
invTranPlot(absences ~ G3, data = fullDataSet, lambda =  2, optimal = TRUE)
bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
logModel <- lm(absences ~ log(G2 + G3 + significantOther + age + gp + parentsApart), fullDataSet)
shapiro.test(model$residuals)
shapiro.test(logmodel$residuals)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(absences ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(log(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(fullDataSet$absences ~ fullDataSet$G3) # this will produce the plot
# #other attempts
invTranPlot(absences ~ G3, data = fullDataSet, lambda =  2, optimal = TRUE)
bestSubset <- bestglm(fullDataSet, IC = 'BIC')
#This code does not need to be run again
#This code can almost certainly be removed from the report
data <- read.csv('student-mat.csv', sep = ';')
dataCleaned <- data[-c(7:14, 18:20, 24:29)]
dataCleaned$gp = dataCleaned$school == 'GP'
dataCleaned$female = dataCleaned$sex == 'F'
dataCleaned$rural = dataCleaned$address == 'R'
dataCleaned$bigFamily = dataCleaned$famsize == 'GT3'
dataCleaned$parentsApart = dataCleaned$Pstatus == 'A'
dataCleaned$extraSchool = dataCleaned$schoolsup == 'yes'
dataCleaned$familyHelp = dataCleaned$famsup == 'yes'
dataCleaned$seeksCollege = dataCleaned$higher == 'yes'
dataCleaned$internet = dataCleaned$internet == 'yes'
dataCleaned$significantOther = dataCleaned$romantic == 'yes'
dataCleaned <- dataCleaned[-c(1:2, 4:6, 8:12)]
write.csv(dataCleaned, "cleanedMathData.csv", row.names = FALSE)
fullDataSet <- read.csv('cleanedMathData.csv')
fullDataSet <- fullDataSet[, c(1:2, 4:15, 3)]
plot(jitter(fullDataSet$absences), jitter(fullDataSet$G3),
main = 'Comparing Abscences and Final Grade',
xlab = 'Number of Abscences',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G1), jitter(fullDataSet$G3),
main = 'Comparing First Period Grade and Final Grade',
xlab = 'First Period Grade',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G2), jitter(fullDataSet$G3),
main = 'Comparing Second Period Grade and Final Grade',
xlab = 'Second Period Grade',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$gp,
main = 'Boxplot between Final Grade and School',
xlab = 'Attends Gabriel Pereira',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$bigFamily,
main = 'Boxplot between Final Grade and Family Size',
xlab = 'Family Size Greater than 3',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$rural,
main = 'Boxplot between Final Grade and whether Students Live Rurally',
xlab = 'Lives in Rural Area',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$female,
main = 'Boxplot between Final Grade and Sex',
xlab = 'Female or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$parentsApart,
main = 'Boxplot between Final Grade and Parents Housing Status',
xlab = 'Parents Separated or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$extraSchool,
main = 'Boxplot between Final Grade and Extra Help at School',
xlab = 'Receives Extra Help',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$familyHelp,
main = 'Boxplot between Final Grade and Help from Family at Home',
xlab = 'Receives Help from Family at Home',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$seeksCollege,
main = 'Boxplot between Final Grade and Aspirations',
xlab = 'Aspires to go to College',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$significantOther,
main = 'Boxplot between Final Grade and Romantic Relationship Status',
xlab = 'Has Significant Other',
ylab = 'Final Grade')
round(cor(fullDataSet), 2)
library(bestglm)
bestSubset <- bestglm(fullDataSet, IC = 'BIC')
bestSubset
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
# #other attempts
invTranPlot(absences ~ G3 + G2+ age + gp + signifcantOther + parentsApart, data = fullDataSet, lambda =  2, optimal = TRUE)
# #other attempts
invTranPlot(absences ~ G3 + G2+ age + gp + significantOther + parentsApart, data = fullDataSet, lambda =  2, optimal = TRUE)
bc = boxCox(sqrt(fullDataSet$absences) ~ fullDataSet$G3) # this will produce the plot
# ##Attempt at BoxCox.
fullDataSet$absences <- fullDataSet$absences + .01 #boxcox doesn't work with 0's.
fullDataSet$G2 <- fullDataSet$G2 + .01
fullDataSet$G3 <- fullDataSet$G3 + .01
bc = boxCox(sqrt(fullDataSet$absences) ~ fullDataSet$G3) # this will produce the plot
bc = boxCox(sqrt(fullDataSet$absences) ~ fullDataSet$G2) # this will produce the plot
bc = boxCox(sqrt(fullDataSet$absences) ~ fullDataSet$age) # this will produce the plot
logModel <- lm(sqrt(absences) ~ sqrt(G2) + sqrt(G3) + significantOther + sqrt(age) + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ sqrt(G2) + sqrt(G3) + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
shapiro.test(logModel$residuals)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(log(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ 1/G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ 1/G2 + 1/G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + 1/age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + log(age) + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + sqrt(age) + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age^2 + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logmodel)
autoplot(logModel)
bc = boxCox(model) # this will produce the plot
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(absences) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(model) # this will produce the plot
bc = boxCox(logModel) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3^2 + significantOther + age + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + significantOther + age^2 + gp + parentsApart, fullDataSet)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
summary(logModel)
# #other attempts
invTranPlot(absences ~ G3 + G2 + age + gp + significantOther + parentsApart, data = fullDataSet, lambda =  2, optimal = TRUE)
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ G3 , data = fullDataSet, lambda =  2, optimal = TRUE)
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ age , data = fullDataSet, lambda =  2, optimal = TRUE)
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
logModel <- lm(sqrt(sqrt(absences)) ~ (1/G2^2) + G3 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ (1/G2^2) + (1/G3^5) + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ (1/G2^2) + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(logModel) # this will produce the plot
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
logModel <- lm(sqrt(sqrt(absences)) ~ G2^2 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(sqrt(absences)) ~ 1/(G2^2) + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ 1/(G2^2) + G3 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
residuals
shapiro.test(logModel$residuals)
bc = boxCox(logModel) # this will produce the plot
bc = boxCox(model) # this will produce the plot
bc = boxCox(logModel) # this will produce the plot
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
summary(logModel)
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
# #other attempts
invTranPlot(sqrt(sqrt(absences)) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
bc = boxCox(logModel) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
logModel <- lm(absences ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(logModel) # this will produce the plot
logModel <- lm(sqrt(absences) ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
bc = boxCox(logModel) # this will produce the plot
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
bc = boxCox(logModel) # this will produce the plot
logModel <- lm(sqrt(sqrt(absences)) ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
logModel <- lm(log(absences) ~ G2 + G3 + age + gp, fullDataSet)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(logModel) # this will produce the plot
# #other attempts
invTranPlot(log(absences) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
#This code does not need to be run again
#This code can almost certainly be removed from the report
data <- read.csv('student-mat.csv', sep = ';')
dataCleaned <- data[-c(7:14, 18:20, 24:29)]
dataCleaned$gp = dataCleaned$school == 'GP'
dataCleaned$female = dataCleaned$sex == 'F'
dataCleaned$rural = dataCleaned$address == 'R'
dataCleaned$bigFamily = dataCleaned$famsize == 'GT3'
dataCleaned$parentsApart = dataCleaned$Pstatus == 'A'
dataCleaned$extraSchool = dataCleaned$schoolsup == 'yes'
dataCleaned$familyHelp = dataCleaned$famsup == 'yes'
dataCleaned$seeksCollege = dataCleaned$higher == 'yes'
dataCleaned$internet = dataCleaned$internet == 'yes'
dataCleaned$significantOther = dataCleaned$romantic == 'yes'
dataCleaned <- dataCleaned[-c(1:2, 4:6, 8:12)]
write.csv(dataCleaned, "cleanedMathData.csv", row.names = FALSE)
fullDataSet <- read.csv('cleanedMathData.csv')
fullDataSet <- fullDataSet[, c(1:2, 4:15, 3)]
plot(jitter(fullDataSet$absences), jitter(fullDataSet$G3),
main = 'Comparing Abscences and Final Grade',
xlab = 'Number of Abscences',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G1), jitter(fullDataSet$G3),
main = 'Comparing First Period Grade and Final Grade',
xlab = 'First Period Grade',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G2), jitter(fullDataSet$G3),
main = 'Comparing Second Period Grade and Final Grade',
xlab = 'Second Period Grade',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$gp,
main = 'Boxplot between Final Grade and School',
xlab = 'Attends Gabriel Pereira',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$bigFamily,
main = 'Boxplot between Final Grade and Family Size',
xlab = 'Family Size Greater than 3',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$rural,
main = 'Boxplot between Final Grade and whether Students Live Rurally',
xlab = 'Lives in Rural Area',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$female,
main = 'Boxplot between Final Grade and Sex',
xlab = 'Female or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$parentsApart,
main = 'Boxplot between Final Grade and Parents Housing Status',
xlab = 'Parents Separated or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$extraSchool,
main = 'Boxplot between Final Grade and Extra Help at School',
xlab = 'Receives Extra Help',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$familyHelp,
main = 'Boxplot between Final Grade and Help from Family at Home',
xlab = 'Receives Help from Family at Home',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$seeksCollege,
main = 'Boxplot between Final Grade and Aspirations',
xlab = 'Aspires to go to College',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$significantOther,
main = 'Boxplot between Final Grade and Romantic Relationship Status',
xlab = 'Has Significant Other',
ylab = 'Final Grade')
round(cor(fullDataSet), 2)
library(bestglm)
bestSubset <- bestglm(fullDataSet, IC = 'BIC')
bestSubset
library(ggfortify)
library(tidyverse)
library(car)
model <- lm(absences ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
avPlots(model)
fullDataSet$residuals <- model$residuals
fullDataSet$fitted <- model$fitted.values
shapiro.test(fullDataSet$residuals)
autoplot(model, which = 2)
autoplot(model, which = 3)
autoplot(model, which = 4)
library(car)
vif(model)
# ##Attempt at BoxCox.
fullDataSet$absences <- fullDataSet$absences + .01 #boxcox doesn't work with 0's.
fullDataSet$G2 <- fullDataSet$G2 + .01
fullDataSet$G3 <- fullDataSet$G3 + .01
#
bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
#
transformed_var <- (fullDataSet$G3^lambda.opt - 1) / lambda.opt
#
model_boxcox <- lm(transformed_var ~ G1 + G2 + significantOther + age + absences, fullDataSet)
summary(model_boxcox)
autoplot(model_boxcox, which = 2)
shapiro.test(model_boxcox$residuals)
# #other attempts
invTranPlot(log(absences) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)
bc = boxCox(logModel) # this will produce the plot
#This code does not need to be run again
#This code can almost certainly be removed from the report
data <- read.csv('student-mat.csv', sep = ';')
dataCleaned <- data[-c(7:14, 18:20, 24:29)]
dataCleaned$gp = dataCleaned$school == 'GP'
dataCleaned$female = dataCleaned$sex == 'F'
dataCleaned$rural = dataCleaned$address == 'R'
dataCleaned$bigFamily = dataCleaned$famsize == 'GT3'
dataCleaned$parentsApart = dataCleaned$Pstatus == 'A'
dataCleaned$extraSchool = dataCleaned$schoolsup == 'yes'
dataCleaned$familyHelp = dataCleaned$famsup == 'yes'
dataCleaned$seeksCollege = dataCleaned$higher == 'yes'
dataCleaned$internet = dataCleaned$internet == 'yes'
dataCleaned$significantOther = dataCleaned$romantic == 'yes'
dataCleaned <- dataCleaned[-c(1:2, 4:6, 8:12)]
write.csv(dataCleaned, "cleanedMathData.csv", row.names = FALSE)
fullDataSet <- read.csv('cleanedMathData.csv')
fullDataSet <- fullDataSet[, c(1:2, 4:15, 3)]
plot(jitter(fullDataSet$absences), jitter(fullDataSet$G3),
main = 'Comparing Abscences and Final Grade',
xlab = 'Number of Abscences',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G1), jitter(fullDataSet$G3),
main = 'Comparing First Period Grade and Final Grade',
xlab = 'First Period Grade',
ylab = 'Final Grade')
plot(jitter(fullDataSet$G2), jitter(fullDataSet$G3),
main = 'Comparing Second Period Grade and Final Grade',
xlab = 'Second Period Grade',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$gp,
main = 'Boxplot between Final Grade and School',
xlab = 'Attends Gabriel Pereira',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$bigFamily,
main = 'Boxplot between Final Grade and Family Size',
xlab = 'Family Size Greater than 3',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$rural,
main = 'Boxplot between Final Grade and whether Students Live Rurally',
xlab = 'Lives in Rural Area',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$female,
main = 'Boxplot between Final Grade and Sex',
xlab = 'Female or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$parentsApart,
main = 'Boxplot between Final Grade and Parents Housing Status',
xlab = 'Parents Separated or not',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$extraSchool,
main = 'Boxplot between Final Grade and Extra Help at School',
xlab = 'Receives Extra Help',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$familyHelp,
main = 'Boxplot between Final Grade and Help from Family at Home',
xlab = 'Receives Help from Family at Home',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$seeksCollege,
main = 'Boxplot between Final Grade and Aspirations',
xlab = 'Aspires to go to College',
ylab = 'Final Grade')
boxplot(fullDataSet$G3 ~ fullDataSet$significantOther,
main = 'Boxplot between Final Grade and Romantic Relationship Status',
xlab = 'Has Significant Other',
ylab = 'Final Grade')
round(cor(fullDataSet), 2)
library(bestglm)
bestSubset <- bestglm(fullDataSet, IC = 'BIC')
bestSubset
library(ggfortify)
library(tidyverse)
library(car)
model <- lm(absences ~ G2 + G3 + significantOther + age + gp + parentsApart, fullDataSet)
avPlots(model)
fullDataSet$residuals <- model$residuals
fullDataSet$fitted <- model$fitted.values
shapiro.test(fullDataSet$residuals)
autoplot(model, which = 2)
autoplot(model, which = 3)
autoplot(model, which = 4)
library(car)
vif(model)
dataFiltered <- fullDataSet[fullDataSet$absences != 0, ]
logModel <- lm(log(absences) ~ G2 + G3 + age + gp, dataFiltered)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
dataFiltered <- fullDataSet[fullDataSet$absences != 0, ]
logModel <- lm(absences ~ G2 + G3 + age + gp, dataFiltered)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
bc = boxCox(logModel) # this will produce the plot
dataFiltered <- fullDataSet[fullDataSet$absences != 0, ]
logModel <- lm(log(absences) ~ G2 + G3 + age + gp, dataFiltered)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
dataFiltered <- fullDataSet[fullDataSet$absences != 0, ]
logModel <- lm(log(absences) ~ G2 + G3 + age + gp + significantOther + parentsApart, dataFiltered)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
vif(logModel)
dataFiltered <- fullDataSet[fullDataSet$absences != 0, ]
logModel <- lm(log(absences) ~ G3 + age + gp + significantOther + parentsApart, dataFiltered)
summary(logModel)
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
autoplot(logModel)
vif(logModel)
fullDataSet <- read.csv('cleanedMathData.csv')
fullDataSet <- fullDataSet[, c(1:2, 4:15, 3)]
fullDataSet <- fullDataSet[fullDataSet$absences != 0, ]
library(bestglm)
bestSubset <- bestglm(fullDataSet, IC = 'BIC')
bestSubset
model <- lm(absences ~ G3 + significantOther + age + gp + parentsApart, fullDataSet)
avPlots(model)
fullDataSet$residuals <- model$residuals
fullDataSet$fitted <- model$fitted.values
shapiro.test(fullDataSet$residuals)
autoplot(model, which = 2)
autoplot(model, which = 3)
autoplot(model, which = 4)
library(car)
vif(model)
# ##Attempt at BoxCox.
fullDataSet$absences <- fullDataSet$absences + .01 #boxcox doesn't work with 0's.
fullDataSet$G2 <- fullDataSet$G2 + .01
fullDataSet$G3 <- fullDataSet$G3 + .01
#
bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
#
transformed_var <- (fullDataSet$G3^lambda.opt - 1) / lambda.opt
#
model_boxcox <- lm(transformed_var ~ G1 + G2 + significantOther + age + absences, fullDataSet)
summary(model_boxcox)
autoplot(model_boxcox, which = 2)
shapiro.test(model_boxcox$residuals)
bc = boxCox(model) # this will produce the plot
