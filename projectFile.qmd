---
title: "Stat330 Project"
format: html
editor: visual
---

For this project, our group selected the Portugese Student Performance dataset from the University of California Irvine. This dataset contains 33 variables. These range from the occupations of each parent, the education level of each parent, the free time each student has, income, age, address, and even whether the student is in a romantic relationship. With so many variables, it seems appropriate to thin the data set to a number of variables.

For this analysis, we are considering the following variables:

| Variable Name | Type        | Description                                                                     |
|-----------------------------|-------------------|-------------------------|
| Sex           | Categorical | Student's Sex                                                                   |
| School        | Categorical | Which School the Student went to (Gabriel Pereira or Mousinho da Silveira)      |
| Age           | Continuous  | Student's Age in Years (Rounded Down)                                           |
| Address       | Categorical | Whether a Student lives in a Rural Area or Urban Area                           |
| Famsize       | Categorical | Whether a Student's Family is Less than or Equal to Three or Greater than Three |
| Pstatus       | Categorical | Parent's Cohabitation Status                                                    |
| Failures      | Continuous  | Number of Past Class Failures                                                   |
| Schoolsup     | Categorical | Extra Educational Support                                                       |
| Famsup        | Categorical | Family Educational Support                                                      |
| Higher        | Categorical | Aspires to Higher Education                                                     |
| Internet      | Categorical | Has Internet Access at Home                                                     |
| Romantic      | Categorical | Has a Romantic Relationship                                                     |
| Absences      | Continuous  | Number of School Absences                                                       |
| G1            | Continuous  | First Period Grade                                                              |
| G2            | Continuous  | Second Period Grade                                                             |
| G3            | Continuous  | Final Grade                                                                     |

```{r}
#This code does not need to be run again
#This code can almost certainly be removed from the report
# data <- read.csv('student-mat.csv', sep = ';')
# dataCleaned <- data[-c(7:14, 18:20, 24:29)]
# 
# dataCleaned$gp = dataCleaned$school == 'GP'
# dataCleaned$female = dataCleaned$sex == 'F'
# dataCleaned$rural = dataCleaned$address == 'R'
# dataCleaned$bigFamily = dataCleaned$famsize == 'GT3'
# dataCleaned$parentsApart = dataCleaned$Pstatus == 'A'
# dataCleaned$extraSchool = dataCleaned$schoolsup == 'yes'
# dataCleaned$familyHelp = dataCleaned$famsup == 'yes'
# dataCleaned$seeksCollege = dataCleaned$higher == 'yes'
# dataCleaned$internet = dataCleaned$internet == 'yes'
# dataCleaned$significantOther = dataCleaned$romantic == 'yes'
# 
# dataCleaned <- dataCleaned[-c(1:2, 4:6, 8:12)]
# 
# write.csv(dataCleaned, "cleanedMathData.csv", row.names = FALSE)
```

#read in data and remove columns with absenses
```{r}
fullDataSet <- read.csv('cleanedMathData.csv')
fullDataSet <- fullDataSet[, c(1:2, 4:15, 3)]
fullDataSet <- fullDataSet[fullDataSet$absences != 0, ]
```

#Load Libraries
```{r}

library(ggplot2)
library(gridExtra)
library(ggfortify)
library(tidyverse)
library(car)
library(bestglm)
library(corrplot)
```

#Exploratory Data

##Continuous-Continuous data
```{r}
#Scatterplots

small_title <- theme(plot.title = element_text(size = 5))
# Create scatterplots
p1 <- ggplot(fullDataSet, aes(x = G3, y = absences)) +
      geom_point(position = "jitter") +
      labs(title = 'Comparing Final Grade and Absences',
           x = 'Final Grade',
           y = 'Number of Absences') +
  small_title

p2 <- ggplot(fullDataSet, aes(x = G1, y = absences)) +
      geom_point(position = "jitter") +
      labs(title = 'Comparing First Period Grade and Absences',
           x = 'First Period Grade',
           y = 'Absences') +
  small_title

p3 <- ggplot(fullDataSet, aes(x = G2, y = absences)) +
      geom_point(position = "jitter") +
      labs(title = 'Comparing Second Period Grade and Absences',
           x = 'Second Period Grade',
           y = 'Absences') +
  small_title

grid.arrange(p1,p2,p3,ncol=3)
```

##Continuous-Categorical data
```{r}

# Create boxplots
b1 <- ggplot(fullDataSet, aes(x = gp, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and School',
           x = 'Attends Gabriel Pereira',
           y = 'Absences') +
  small_title

b2 <- ggplot(fullDataSet, aes(x = bigFamily, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Family Size',
           x = 'Family Size Greater than 3',
           y = 'Absences') +
  small_title

b3 <- ggplot(fullDataSet, aes(x = rural, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and whether Students Live Rurally',
           x = 'Lives in Rural Area',
           y = 'Absences') +
  small_title

b4 <- ggplot(fullDataSet, aes(x = female, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Sex',
           x = 'Female or not',
           y = 'Absences') +
  small_title

b5 <- ggplot(fullDataSet, aes(x = parentsApart, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Parents Housing Status',
           x = 'Parents Separated or not',
           y = 'Absences') +
  small_title

b6 <- ggplot(fullDataSet, aes(x = extraSchool, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Extra Help at School',
           x = 'Receives Extra Help',
           y = 'Absences')+
  small_title

b7 <- ggplot(fullDataSet, aes(x = familyHelp, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Help from Family at Home',
           x = 'Receives Help from Family at Home',
           y = 'Absences')+
  small_title

b8 <- ggplot(fullDataSet, aes(x = seeksCollege, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Aspirations',
           x = 'Aspires to go to College',
           y = 'Absences') +
  small_title

b9 <- ggplot(fullDataSet, aes(x = significantOther, y = absences)) +
      geom_boxplot() +
      labs(title = 'Boxplot between Absences and Romantic Relationship Status',
           x = 'Has Significant Other',
           y = 'Absences') +
  small_title

# Arrange plots in a grid
grid.arrange(b1, b2, b3, b4, b5, b6, b7, b8, b9, ncol = 3)
```
##Correlation Plots
```{r}
round(cor(fullDataSet), 2)
corrplot(cor(fullDataSet), type = "upper")
```

There appears to potentially be multicollinearity between the students' first period, second period, and final grades.

For this project, we decided to use the AIC metric as it is less selective. Because of this, the model will result in a more explanatory model than using the BIC metric. We also elected to use best subsets as it will return the absolute best model possible based on this metric. Since there are only 14 variables, this option shouldn't take too long to execute.

#Finding Best Model
```{r}

bestSubset <- bestglm(fullDataSet, IC = 'BIC')
bestSubset
```

This model decided the most significant variables for a students final grades are their first term grades, second term grades, number of absences, age of the student, and whether they are in a relationship.

Now we will check the model assumptions.

```{r}
model <- lm(absences ~ G3 + significantOther + age + gp + parentsApart, fullDataSet)
```

#Model Assumptions
```{r}
avPlots(model)
```

From the added-variable plots, it appears that the absences variable has a pattern in its residuals. Other than that, the plots all appear to be mostly linear.

##Normality
```{r}
fullDataSet$residuals <- model$residuals
fullDataSet$fitted <- model$fitted.values
shapiro.test(fullDataSet$residuals)
autoplot(model, which = 2)
```

Both a shapiro-wilk test and a QQ plot seem to indicate that the assumption of normal errors is violated.

##Homeoscacity
```{r}
autoplot(model, which = 3)
```

The scale-location plot isn't very flat, as such it appears that the assumption of homoscedasticity is violated.

##Influential points check
```{r}
autoplot(model, which = 4)
```

It appears that there are no points with undue influence, thus the tacit assumption that there are no points with undue influence nor high leverage is met.

The data was collected by using school reports and questionaires. As such we can assume that the datapoints are independent as no other students answers should affect how another student answered the survey.

##Multicollinearity check
```{r}
vif(model)
```

#Transforming data to pass assumptions

```{r}
# ##Attempt at BoxCox.
#fullDataSet$absences <- fullDataSet$absences + .01 #boxcox doesn't work with 0's. 
#fullDataSet$G2 <- fullDataSet$G2 + .01
#fullDataSet$G3 <- fullDataSet$G3 + .01
# 
#bc = boxCox(model) # this will produce the plot
#lambda.opt = bc$x[which.max(bc$y)] 
# 
#transformed_var <- (fullDataSet$G3^lambda.opt - 1) / lambda.opt
# 
#model_boxcox <- lm(transformed_var ~ G1 + G2 + significantOther + age + absences, fullDataSet)
#summary(model_boxcox)
#autoplot(model_boxcox, which = 2)
#shapiro.test(model_boxcox$residuals)


```

```{r}
# #other attempts
#invTranPlot(log(absences) ~ G2 , data = fullDataSet, lambda =  2, optimal = TRUE)

bc = boxCox(model) # this will produce the plot
lambda.opt = bc$x[which.max(bc$y)]
```

#Remake model
```{r}

logModel <- lm(log(absences) ~ G3 + age + gp + significantOther + parentsApart, fullDataSet)
summary(logModel)
```

#Recheck assumptions
```{r}
shapiro.test(logModel$residuals)
autoplot(logModel, which = 2)
```

```{r}
autoplot(logModel)
```

```{r}
vif(logModel)
```

#create confint
```{r}
confint(logModel,
        level = .95)
```

